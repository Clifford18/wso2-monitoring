{"doc":" Contains list of possible properties names and can produce a map of property values, if provided as file {@value #DEFAULT_CONFIG_FILENAME} on the\n classpath or as environment property.\n <p>\n The following properties are allowed:\n <ul>\n <li>simplejavamail.javaxmail.debug</li>\n <li>simplejavamail.transportstrategy</li>\n <li>simplejavamail.smtp.host</li>\n <li>simplejavamail.smtp.port</li>\n <li>simplejavamail.smtp.username</li>\n <li>simplejavamail.smtp.password</li>\n <li>simplejavamail.custom.sslfactory.class</li>\n <li>simplejavamail.proxy.host</li>\n <li>simplejavamail.proxy.port</li>\n <li>simplejavamail.proxy.username</li>\n <li>simplejavamail.proxy.password</li>\n <li>simplejavamail.proxy.socks5bridge.port</li>\n <li>simplejavamail.defaults.subject</li>\n <li>simplejavamail.defaults.from.name</li>\n <li>simplejavamail.defaults.from.address</li>\n <li>simplejavamail.defaults.replyto.name</li>\n <li>simplejavamail.defaults.replyto.address</li>\n <li>simplejavamail.defaults.bounceto.name</li>\n <li>simplejavamail.defaults.bounceto.address</li>\n <li>simplejavamail.defaults.to.name</li>\n <li>simplejavamail.defaults.to.address</li>\n <li>simplejavamail.defaults.cc.name</li>\n <li>simplejavamail.defaults.cc.address</li>\n <li>simplejavamail.defaults.bcc.name</li>\n <li>simplejavamail.defaults.bcc.address</li>\n <li>simplejavamail.defaults.poolsize</li>\n <li>simplejavamail.defaults.poolsize.keepalivetime</li>\n <li>simplejavamail.defaults.connectionpool.clusterkey.uuid</li>\n <li>simplejavamail.defaults.connectionpool.coresize</li>\n <li>simplejavamail.defaults.connectionpool.maxsize</li>\n <li>simplejavamail.defaults.connectionpool.claimtimeout.millis</li>\n <li>simplejavamail.defaults.connectionpool.expireafter.millis</li>\n <li>simplejavamail.defaults.connectionpool.loadbalancing.strategy</li>\n <li>simplejavamail.defaults.sessiontimeoutmillis</li>\n <li>simplejavamail.defaults.trustallhosts</li>\n <li>simplejavamail.defaults.trustedhosts</li>\n <li>simplejavamail.defaults.verifyserveridentity</li>\n <li>simplejavamail.transport.mode.logging.only</li>\n <li>simplejavamail.opportunistic.tls</li>\n <li>simplejavamail.smime.signing.keystore</li>\n <li>simplejavamail.smime.signing.keystore_password</li>\n <li>simplejavamail.smime.signing.key_alias</li>\n <li>simplejavamail.smime.signing.key_password</li>\n <li>simplejavamail.smime.encryption.certificate</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.enable.dir</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.enable.url</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.enable.classpath</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.base.dir</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.base.url</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.base.classpath</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.outside.base.dir</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.outside.base.classpath</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.outside.base.url</li>\n <li>simplejavamail.embeddedimages.dynamicresolution.mustbesuccesful</li>\n </ul>\n","fields":[{"name":"DEFAULT_CONFIG_FILENAME","doc":" By default the optional file {@value} will be loaded from classpath to load initial defaults.\n"},{"name":"EXTRA_PROPERTY_PATTERN","doc":" This pattern recognizes extra property lines that should be loaded directly into JavaMail on the Session object.\n"},{"name":"RESOLVED_PROPERTIES","doc":" Initially try to load properties from \"{@value #DEFAULT_CONFIG_FILENAME}\".\n\n @see #loadProperties(String, boolean)\n @see #loadProperties(InputStream, boolean)\n"}],"enumConstants":[],"methods":[{"name":"valueOrProperty","paramTypes":["java.lang.Object","org.simplejavamail.config.ConfigLoader.Property"],"doc":" @return The value if not null or else the value from config file if provided or else <code>null</code>.\n"},{"name":"valueOrPropertyAsString","paramTypes":["java.lang.String","org.simplejavamail.config.ConfigLoader.Property","java.lang.String"],"doc":" See {@link #valueOrProperty(Object, Property, Object)}.\n"},{"name":"valueOrPropertyAsBoolean","paramTypes":["java.lang.Boolean","org.simplejavamail.config.ConfigLoader.Property","java.lang.Boolean"],"doc":" See {@link #valueOrProperty(Object, Property, Object)}.\n"},{"name":"valueOrPropertyAsInteger","paramTypes":["java.lang.Integer","org.simplejavamail.config.ConfigLoader.Property","java.lang.Integer"],"doc":" See {@link #valueOrProperty(Object, Property, Object)}.\n"},{"name":"valueOrProperty","paramTypes":["java.lang.Object","org.simplejavamail.config.ConfigLoader.Property","java.lang.Object"],"doc":" Returns the given value if not null and not empty, otherwise tries to resolve the given property and if still not found resort to the default value if\n provided.\n <p>\n Null or blank values are never allowed, so they are always ignored.\n\n @return The value if not null or else the value from config file if provided or else <code>defaultValue</code>.\n"},{"name":"loadProperties","paramTypes":["java.lang.String","boolean"],"doc":" Loads properties from property file on the classpath, if provided. Calling this method only has effect on new Email and Mailer instances after\n this.\n\n @param filename      Any file that is on the classpath that holds a list of key=value pairs.\n @param addProperties Flag to indicate if the new properties should be added or replacing the old properties.\n @return The updated properties map that is used internally.\n"},{"name":"loadProperties","paramTypes":["java.util.Properties","boolean"],"doc":" Loads properties from another properties source, in case you want to provide your own list.\n\n @param properties    Your own list of properties\n @param addProperties Flag to indicate if the new properties should be added or replacing the old properties.\n @return The updated properties map that is used internally.\n"},{"name":"loadProperties","paramTypes":["java.io.File","boolean"],"doc":" Loads properties from property {@link File}, if provided. Calling this method only has effect on new Email and Mailer instances after this.\n\n @param filename      Any file reference that holds a properties list.\n @param addProperties Flag to indicate if the new properties should be added or replacing the old properties.\n @return The updated properties map that is used internally.\n"},{"name":"loadProperties","paramTypes":["java.io.InputStream","boolean"],"doc":" Loads properties from {@link InputStream}. Calling this method only has effect on new Email and Mailer instances after this.\n\n @param inputStream   Source of property key=value pairs separated by newline \\n characters.\n @param addProperties Flag to indicate if the new properties should be added or replacing the old properties.\n @return The updated properties map that is used internally.\n"},{"name":"readProperties","paramTypes":["java.util.Properties"],"doc":" @return All properties in priority of System property {@code >} File properties.\n"},{"name":"parsePropertyValue","paramTypes":["java.lang.String"],"doc":" @return The property value in boolean, integer or as original string value.\n"}]}