{"doc":" Email message with all necessary data for an effective mailing action, including attachments etc.\n Exclusively created using <em>EmailBuilder</em>.\n","fields":[{"name":"id","doc":" @see EmailPopulatingBuilder#fixingMessageId(String)\n"},{"name":"fromRecipient","doc":" @see EmailPopulatingBuilder#from(Recipient)\n"},{"name":"replyToRecipient","doc":" @see EmailPopulatingBuilder#withReplyTo(Recipient)\n"},{"name":"bounceToRecipient","doc":" @see EmailPopulatingBuilder#withBounceTo(Recipient)\n"},{"name":"text","doc":" @see EmailPopulatingBuilder#withPlainText(String)\n"},{"name":"textHTML","doc":" @see EmailPopulatingBuilder#withHTMLText(String)\n"},{"name":"calendarMethod","doc":" @see EmailPopulatingBuilder#withCalendarText(CalendarMethod, String)\n"},{"name":"textCalendar","doc":" @see EmailPopulatingBuilder#withCalendarText(CalendarMethod, String)\n"},{"name":"subject","doc":" @see EmailPopulatingBuilder#withSubject(String)\n"},{"name":"recipients","doc":" @see EmailPopulatingBuilder#to(Recipient...)\n @see EmailPopulatingBuilder#cc(Recipient...)\n @see EmailPopulatingBuilder#bcc(Recipient...)\n"},{"name":"embeddedImages","doc":" @see EmailPopulatingBuilder#withEmbeddedImage(String, DataSource)\n"},{"name":"attachments","doc":" @see EmailPopulatingBuilder#withAttachment(String, DataSource)\n"},{"name":"decryptedAttachments","doc":" If the S/MIME module is loaded, this list will contain the same attachments as {@link #attachments},\n but with any S/MIME signed attachments decrypted.\n"},{"name":"headers","doc":" @see EmailPopulatingBuilder#withHeader(String, Object)\n @see EmailStartingBuilder#replyingTo(MimeMessage, boolean, String)\n"},{"name":"useDispositionNotificationTo","doc":" @see EmailPopulatingBuilder#withDispositionNotificationTo()\n @see EmailPopulatingBuilder#withDispositionNotificationTo(Recipient)\n"},{"name":"dispositionNotificationTo","doc":" @see EmailPopulatingBuilder#withDispositionNotificationTo()\n @see EmailPopulatingBuilder#withDispositionNotificationTo(Recipient)\n"},{"name":"useReturnReceiptTo","doc":" @see EmailPopulatingBuilder#withReturnReceiptTo()\n @see EmailPopulatingBuilder#withReturnReceiptTo(Recipient)\n"},{"name":"returnReceiptTo","doc":" @see EmailPopulatingBuilder#withReturnReceiptTo()\n @see EmailPopulatingBuilder#withReturnReceiptTo(Recipient)\n"},{"name":"emailToForward","doc":" @see EmailStartingBuilder#forwarding(MimeMessage)\n"},{"name":"dkimPrivateKeyData","doc":" @see EmailPopulatingBuilder#signWithDomainKey(InputStream, String, String)\n @see EmailPopulatingBuilder#signWithDomainKey(byte[], String, String)\n @see EmailPopulatingBuilder#signWithDomainKey(File, String, String)\n"},{"name":"dkimSigningDomain","doc":" @see EmailPopulatingBuilder#signWithDomainKey(InputStream, String, String)\n @see EmailPopulatingBuilder#signWithDomainKey(File, String, String)\n"},{"name":"dkimSelector","doc":" @see EmailPopulatingBuilder#signWithDomainKey(InputStream, String, String)\n @see EmailPopulatingBuilder#signWithDomainKey(File, String, String)\n"},{"name":"x509CertificateForSmimeEncryption","doc":" @see EmailPopulatingBuilder#signWithSmime(Pkcs12Config)\n @see EmailPopulatingBuilder#signWithSmime(InputStream, String, String, String)\n"},{"name":"pkcs12ConfigForSmimeSigning","doc":" @see EmailPopulatingBuilder#encryptWithSmime(X509Certificate)\n @see EmailPopulatingBuilder#encryptWithSmime(InputStream)\n"},{"name":"smimeSignedEmail","doc":" @see EmailPopulatingBuilder#getSmimeSignedEmail()\n"},{"name":"originalSmimeDetails","doc":" @see EmailPopulatingBuilder#getOriginalSmimeDetails()\n"},{"name":"wasMergedWithSmimeSignedMessage","doc":" @see Email#wasMergedWithSmimeSignedMessage()\n"},{"name":"sentDate","doc":" @see EmailPopulatingBuilder#fixingSentDate(Date)\n"}],"enumConstants":[],"methods":[{"name":"internalSetId","paramTypes":["java.lang.String"],"doc":" @deprecated Don't use this method, refer to {@link EmailPopulatingBuilder#fixingMessageId(String)} instead. This method is used internally to\n update the message id once a mail has been sent.\n"},{"name":"wasMergedWithSmimeSignedMessage","paramTypes":[],"doc":" @deprecated Don't use this method. This method is used internally when using the builder API to copy an email that\n contains an S/MIME signed message. Without this method, we don't know if the copy should also be merged to match the\n copied email.\n"},{"name":"getId","paramTypes":[],"doc":" @see EmailPopulatingBuilder#fixingMessageId(String)\n"},{"name":"getFromRecipient","paramTypes":[],"doc":" @see EmailPopulatingBuilder#from(Recipient)\n"},{"name":"getReplyToRecipient","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withReplyTo(Recipient)\n"},{"name":"getBounceToRecipient","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withBounceTo(Recipient)\n"},{"name":"getSubject","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withSubject(String)\n"},{"name":"isUseDispositionNotificationTo","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withDispositionNotificationTo()\n @see EmailPopulatingBuilder#withDispositionNotificationTo(Recipient)\n"},{"name":"getDispositionNotificationTo","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withDispositionNotificationTo()\n @see EmailPopulatingBuilder#withDispositionNotificationTo(Recipient)\n"},{"name":"isUseReturnReceiptTo","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withReturnReceiptTo()\n @see EmailPopulatingBuilder#withReturnReceiptTo(Recipient)\n"},{"name":"getReturnReceiptTo","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withReturnReceiptTo()\n @see EmailPopulatingBuilder#withReturnReceiptTo(Recipient)\n"},{"name":"getEmailToForward","paramTypes":[],"doc":" @see EmailStartingBuilder#forwarding(MimeMessage)\n"},{"name":"getPlainText","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withPlainText(String)\n"},{"name":"getHTMLText","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withHTMLText(String)\n"},{"name":"getCalendarMethod","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withCalendarText(CalendarMethod, String)\n"},{"name":"getCalendarText","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withCalendarText(CalendarMethod, String)\n"},{"name":"getAttachments","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withAttachment(String, DataSource)\n"},{"name":"getDecryptedAttachments","paramTypes":[],"doc":" @see EmailPopulatingBuilder#getDecryptedAttachments()\n"},{"name":"getEmbeddedImages","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withEmbeddedImage(String, DataSource)\n"},{"name":"getRecipients","paramTypes":[],"doc":" @see EmailPopulatingBuilder#to(Recipient...)\n @see EmailPopulatingBuilder#cc(Recipient...)\n @see EmailPopulatingBuilder#bcc(Recipient...)\n"},{"name":"getHeaders","paramTypes":[],"doc":" @see EmailPopulatingBuilder#withHeader(String, Object)\n @see EmailStartingBuilder#replyingTo(MimeMessage, boolean, String)\n"},{"name":"getDkimPrivateKeyData","paramTypes":[],"doc":" @see EmailPopulatingBuilder#signWithDomainKey(InputStream, String, String)\n"},{"name":"getDkimSigningDomain","paramTypes":[],"doc":" @see EmailPopulatingBuilder#signWithDomainKey(InputStream, String, String)\n @see EmailPopulatingBuilder#signWithDomainKey(File, String, String)\n"},{"name":"getDkimSelector","paramTypes":[],"doc":" @see EmailPopulatingBuilder#signWithDomainKey(InputStream, String, String)\n @see EmailPopulatingBuilder#signWithDomainKey(File, String, String)\n"},{"name":"getX509CertificateForSmimeEncryption","paramTypes":[],"doc":" @see EmailPopulatingBuilder#signWithSmime(Pkcs12Config)\n @see EmailPopulatingBuilder#signWithSmime(InputStream, String, String, String)\n"},{"name":"getPkcs12ConfigForSmimeSigning","paramTypes":[],"doc":" @see EmailPopulatingBuilder#encryptWithSmime(X509Certificate)\n @see EmailPopulatingBuilder#encryptWithSmime(InputStream)\n"},{"name":"getSmimeSignedEmail","paramTypes":[],"doc":" @see EmailPopulatingBuilder#getSmimeSignedEmail()\n"},{"name":"getOriginalSmimeDetails","paramTypes":[],"doc":" @see EmailPopulatingBuilder#getOriginalSmimeDetails()\n"},{"name":"getSentDate","paramTypes":[],"doc":" @see EmailPopulatingBuilder#fixingSentDate(Date)\n"}]}