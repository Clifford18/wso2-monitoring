{"doc":" The proxy configuration that indicates whether the connections should be routed through a proxy.\n <p>\n In case a proxy is required, the properties <em>\"mail.smtp(s).socks.host\"</em> and <em>\"mail.smtp(s).socks.port\"</em> will be set.\n <p>\n As the underlying JavaMail framework only support anonymous SOCKS proxy servers for non-ssl connections, authenticated SOCKS5 proxy is made\n possible using an intermediary anonymous proxy server which relays the connection through an authenticated remote proxy server. Anonymous proxies\n are still handled by JavaMail's own time-tested proxy client implementation.\n <p>\n NOTE: Attempting to use a proxy and SSL SMTP authentication will result in an error, as the underlying JavaMail framework ignores any proxy\n settings for SSL connections.\n","fields":[],"enumConstants":[],"methods":[{"name":"requiresProxy","paramTypes":[],"doc":" @return {@code true} if remoteProxyHost isn't empty.\n"},{"name":"requiresAuthentication","paramTypes":[],"doc":" @return {@code true} if username isn't empty.\n"},{"name":"getProxyBridgePort","paramTypes":[],"doc":" @see org.simplejavamail.api.mailer.MailerRegularBuilder#withProxyBridgePort(Integer)\n"},{"name":"getRemoteProxyHost","paramTypes":[],"doc":" @see org.simplejavamail.api.mailer.MailerRegularBuilder#withProxyHost(String)\n"},{"name":"getRemoteProxyPort","paramTypes":[],"doc":" @see org.simplejavamail.api.mailer.MailerRegularBuilder#withProxyPort(Integer)\n"},{"name":"getUsername","paramTypes":[],"doc":" @see org.simplejavamail.api.mailer.MailerRegularBuilder#withProxyUsername(String)\n"},{"name":"getPassword","paramTypes":[],"doc":" @see org.simplejavamail.api.mailer.MailerRegularBuilder#withProxyPassword(String)\n"}]}