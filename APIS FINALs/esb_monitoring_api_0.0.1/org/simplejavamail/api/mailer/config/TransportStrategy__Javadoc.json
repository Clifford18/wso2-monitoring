{"doc":" Defines the various types of transport protocols and implements respective properties so that a {@link Session} may be configured using a\n <code>TransportStrategy</code> implementation.\n","fields":[{"name":"TRANSPORT_STRATEGY_MARKER","doc":" Marker property used to track which {@link TransportStrategy} has been used. This way we can differentiate between preconfigured custom\n <code>Session</code> and sessions created by a <code>Mailer</code> instance, without checking each and every property for a specific strategy.\n <p>\n This is nescesary in case Simple Java Mail was used first to create an independant Session instance which is later used\n as a custom session when sending emails.\n"}],"enumConstants":[{"name":"SMTP","doc":" Vanilla SMTP with an insecure STARTTLS upgrade (if supported).\n <p>\n This {@code TransportStrategy} falls back to plaintext when a mail server does not indicate support for\n STARTTLS. Additionally, even if a TLS session is negotiated, <strong>server certificates are not validated in\n any way</strong>.\n <p>\n This {@code TransportStrategy} only offers protection against passive network eavesdroppers when the mail server\n indicates support for STARTTLS. Active network attackers can trivially bypass the encryption 1) by tampering with\n the STARTTLS indicator, 2) by presenting a self-signed certificate, 3) by presenting a certificate issued by an\n untrusted certificate authority; or 4) by presenting a certificate that was issued by a valid certificate\n authority to a domain other than the mail server's.\n <p>\n For proper mail transport encryption, see {@link TransportStrategy#SMTPS} or\n {@link TransportStrategy#SMTP_TLS}.\n <p>\n Implementation notes:\n <ul>\n     <li>The transport protocol is explicitly set to {@code smtp}.</li>\n     <li>Only {@code mail.smtp} properties are set.</li>\n     <li>STARTTLS is enabled by setting {@code mail.smtp.starttls.enable} to {@code true}.</li>\n     <li>STARTTLS plaintext fallback is enabled by setting {@code mail.smtp.starttls.required} to {@code false}.</li>\n </ul>\n"},{"name":"SMTPS","doc":" SMTP entirely encapsulated by TLS. Commonly known as SMTPS.\n <p>\n Strict validation of server certificates is enabled. Server certificates must be issued 1) by a certificate\n authority in the system trust store; and 2) to a subject matching the identity of the remote SMTP server.\n <p>\n Implementation notes:\n <ul>\n     <li>The transport protocol is explicitly set to {@code smtps}.</li>\n     <li>Only {@code mail.smtps} properties are set.</li>\n     <li>\n {@code mail.smtps.quitwait} is set to {@code false} to get rid of a strange SSLException:\n <pre>\n javax.mail.MessagingException: Exception reading response;\n nested exception is:\n \tjavax.net.ssl.SSLException: Unsupported record version Unknown-50.49\n (..)</pre>\n <blockquote>The mail is sent but the exception is unwanted. The property <em>quitwait</em> means If set to false, the QUIT command is sent and\n the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT\n command</blockquote><br> <strong>- <a href=\"http://www.rgagnon.com/javadetails/java-0570.html\">source</a></strong>\n     </li>\n </ul>\n"},{"name":"SMTP_TLS","doc":" Plaintext SMTP with a mandatory, authenticated STARTTLS upgrade.\n <p>\n Strict validation of server certificates is enabled. Server certificates must be issued 1) by a certificate\n authority in the system trust store; and 2) to a subject matching the identity of the remote SMTP server.\n <p>\n Implementation notes:\n <ul>\n     <li>The transport protocol is explicitly set to {@code smtp}.</li>\n     <li>Only {@code mail.smtp} properties are set.</li>\n     <li>STARTTLS is enabled by setting {@code mail.smtp.starttls.enable} to {@code true}.</li>\n     <li>STARTTLS plaintext fallback is disabled by setting {@code mail.smtp.starttls.required} to {@code true}.</li>\n </ul>\n"}],"methods":[{"name":"generateProperties","paramTypes":[],"doc":" For internal use only.\n"},{"name":"propertyNameHost","paramTypes":[],"doc":" For internal use only.\n"},{"name":"propertyNamePort","paramTypes":[],"doc":" For internal use only.\n"},{"name":"propertyNameUsername","paramTypes":[],"doc":" For internal use only.\n"},{"name":"propertyNameAuthenticate","paramTypes":[],"doc":" For internal use only.\n"},{"name":"propertyNameSocksHost","paramTypes":[],"doc":" For internal use only.\n"},{"name":"propertyNameSocksPort","paramTypes":[],"doc":" For internal use only.\n"},{"name":"propertyNameConnectionTimeout","paramTypes":[],"doc":" For internal use only.\n\n @see \"SMTP.propertyNameConnectionTimeout()\"\n @see \"SMTPS.propertyNameConnectionTimeout()\"\n @see \"SMTP_TLS.propertyNameConnectionTimeout()\"\n"},{"name":"propertyNameWriteTimeout","paramTypes":[],"doc":" For internal use only.\n\n @see \"SMTP.propertyNameWriteTimeout()\"\n @see \"SMTPS.propertyNameWriteTimeout()\"\n @see \"SMTP_TLS.propertyNameWriteTimeout()\"\n"},{"name":"propertyNameTimeout","paramTypes":[],"doc":" For internal use only.\n\n @see \"SMTP.propertyNameTimeout()\"\n @see \"SMTPS.propertyNameTimeout()\"\n @see \"SMTP_TLS.propertyNameTimeout()\"\n"},{"name":"propertyNameEnvelopeFrom","paramTypes":[],"doc":" For internal use only.\n"},{"name":"propertyNameSSLTrust","paramTypes":[],"doc":" For internal use only.\n"},{"name":"propertyNameCheckServerIdentity","paramTypes":[],"doc":" For internal use only.\n"},{"name":"getDefaultServerPort","paramTypes":[],"doc":" For internal use only.\n"},{"name":"setOpportunisticTLS","paramTypes":["java.lang.Boolean"],"doc":" Determines whether TLS should be attempted for SMTP plain protocol (optional if offered by the SMTP server). If not set and no property\n was provided, this value defaults to it default.\n <p>\n Setting this flag to false causes {@link TransportStrategy#SMTP} to revert back to the legacy behavior.\n <p>\n Only has any effect when invoked via {@code TransportStrategy.SMTP.setOpportunisticTLS(true/false)}\n"},{"name":"findStrategyForSession","paramTypes":["javax.mail.Session"],"doc":" For internal use only.\n\n @param session The session to determine the current transport strategy for\n @return Which strategy matches the current Session properties.\n @see #TRANSPORT_STRATEGY_MARKER\n @see #generateProperties()\n"}]}