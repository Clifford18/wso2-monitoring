{"doc":" Builder superclass which contains API to take care of all generic Mailer properties unrelated to the SMTP server\n (host, port, username, password and transport strategy).\n <p>\n To start a new Mailer builder, refer to {@link MailerRegularBuilder}.\n","fields":[{"name":"DEFAULT_TRUST_ALL_HOSTS","doc":" {@value}\n\n @see #trustingAllHosts(boolean)\n"},{"name":"DEFAULT_VERIFY_SERVER_IDENTITY","doc":" {@value}\n\n @see #verifyingServerIdentity(boolean)\n"},{"name":"DEFAULT_SESSION_TIMEOUT_MILLIS","doc":" The default maximum timeout value for the transport socket is <code>{@value}</code> milliseconds (affects socket connect-,\n read- and write timeouts). Can be overridden from a config file or through System variable.\n"},{"name":"DEFAULT_POOL_SIZE","doc":" {@value}\n\n @see #withThreadPoolSize(Integer)\n"},{"name":"DEFAULT_POOL_KEEP_ALIVE_TIME","doc":" {@value}\n\n @see #withThreadPoolKeepAliveTime(Integer)\n"},{"name":"DEFAULT_CONNECTIONPOOL_CORE_SIZE","doc":" {@value}\n\n @see #withConnectionPoolCoreSize(Integer)\n"},{"name":"DEFAULT_CONNECTIONPOOL_MAX_SIZE","doc":" {@value}\n\n @see #withConnectionPoolMaxSize(Integer)\n"},{"name":"DEFAULT_CONNECTIONPOOL_CLAIMTIMEOUT_MILLIS","doc":" {@value} ({@code Integer.MAX_VALUE}), effectively indefinately.\n\n @see #withConnectionPoolClaimTimeoutMillis(Integer)\n"},{"name":"DEFAULT_CONNECTIONPOOL_EXPIREAFTER_MILLIS","doc":" {@value}\n\n @see #withConnectionPoolExpireAfterMillis(Integer)\n"},{"name":"DEFAULT_CONNECTIONPOOL_LOADBALANCING_STRATEGY","doc":" {@value}\n\n @see #withConnectionPoolLoadBalancingStrategy(LoadBalancingStrategy)\n"},{"name":"DEFAULT_PROXY_PORT","doc":" Default port is <code>{@value}</code>.\n"},{"name":"DEFAULT_PROXY_BRIDGE_PORT","doc":" The temporary intermediary SOCKS5 relay server bridge is a server that sits in between JavaMail and the remote proxy.\n Default port is <code>{@value}</code>.\n"},{"name":"DEFAULT_TRANSPORT_MODE_LOGGING_ONLY","doc":" Defaults to <code>{@value}</code>, sending mails rather than just only logging the mails.\n"},{"name":"DEFAULT_JAVAXMAIL_DEBUG","doc":" Defaults to <code>{@value}</code>, sending mails rather than just only logging the mails.\n"}],"enumConstants":[],"methods":[{"name":"async","paramTypes":[],"doc":" Changes the default for sending emails and testing server connections to asynchronous (batch mode).\n <p>\n In case of asynchronous mode, make sure you configure logging to file or inspect the returned {@link AsyncResponse}.\n <p>\n Note that you can configure a couple of concurrency properties such as thread pool size, keepAlivetime, connection pool size (or even a cluster) etc.\n\n <p>\n <strong>Note:</strong> without configuring a thread pool (see {@link #withExecutorService(ExecutorService)} or\n @see #withExecutorService(ExecutorService)\n @see #withThreadPoolSize(Integer)\n @see #withThreadPoolKeepAliveTime(Integer)\n @see #withConnectionPoolCoreSize(Integer)\n @see #withConnectionPoolMaxSize(Integer)\n @see #withConnectionPoolExpireAfterMillis(Integer)\n"},{"name":"withProxy","paramTypes":["java.lang.String","java.lang.Integer"],"doc":" Delegates to {@link #withProxyHost(String)} and {@link #withProxyPort(Integer)}.\n"},{"name":"withProxy","paramTypes":["java.lang.String","java.lang.Integer","java.lang.String","java.lang.String"],"doc":" Sets proxy server settings, by delegating to:\n <ol>\n <li>{@link #withProxyHost(String)}</li>\n <li>{@link #withProxyPort(Integer)}</li>\n <li>{@link #withProxyUsername(String)}</li>\n <li>{@link #withProxyPassword(String)}</li>\n </ol>\n\n @param proxyHost See linked documentation above.\n @param proxyPort See linked documentation above.\n @param proxyUsername See linked documentation above.\n @param proxyPassword See linked documentation above.\n"},{"name":"withProxyHost","paramTypes":["java.lang.String"],"doc":" Sets the optional proxy host, which will override any default that might have been set (through properties file or programmatically).\n"},{"name":"withProxyPort","paramTypes":["java.lang.Integer"],"doc":" Sets the proxy port, which will override any default that might have been set (through properties file or programmatically).\n <p>\n Defaults to {@value DEFAULT_PROXY_PORT} if no custom default property was configured.\n"},{"name":"withProxyUsername","paramTypes":["java.lang.String"],"doc":" Sets the optional username to authenticate with the proxy. If set, Simple Java Mail will use its built in proxy bridge to\n perform the SOCKS authentication, as the underlying JavaMail framework doesn't support this directly. The execution path\n then will be:\n <p>\n {@code Simple Java Mail client -> JavaMail -> anonymous authentication with local proxy bridge -> full authentication with remote SOCKS proxy -> SMTP server}.\n"},{"name":"withProxyPassword","paramTypes":["java.lang.String"],"doc":" Sets the optional password to authenticate with the proxy.\n <p>\n <strong>Note:</strong> this is only works in combination with the {@value org.simplejavamail.internal.modules.AuthenticatedSocksModule#NAME}.\n\n @see #withProxyUsername(String)\n"},{"name":"withProxyBridgePort","paramTypes":["java.lang.Integer"],"doc":" Relevant only when using username authentication with a proxy.\n <p>\n Overrides the default for the intermediary SOCKS5 relay server bridge, which is a server that sits in between JavaMail and the remote proxy.\n <p>\n Defaults to {@value DEFAULT_PROXY_BRIDGE_PORT} if no custom default property was configured.\n <p>\n <strong>Note:</strong> this is only works in combination with the {@value org.simplejavamail.internal.modules.AuthenticatedSocksModule#NAME}.\n\n @param proxyBridgePort The port to use for the proxy bridging server.\n\n @see #withProxyUsername(String)\n"},{"name":"withDebugLogging","paramTypes":["java.lang.Boolean"],"doc":" This flag is set on the Session instance through {@link Session#setDebug(boolean)} so that it generates debug information. To get more\n information out of the underlying JavaMail framework or out of Simple Java Mail, increase logging config of your chosen logging framework.\n\n @param debugLogging Enables or disables debug logging with {@code true} or {@code false}.\n"},{"name":"withSessionTimeout","paramTypes":["java.lang.Integer"],"doc":" Controls the timeout to use when sending emails (affects socket connect-, read- and write timeouts).\n <p>\n Will configure a set of properties on the Session instance with the given value, of which the names\n depend on the transport strategy:\n <ul>\n     <li>{@link TransportStrategy#propertyNameConnectionTimeout()}</li>\n     <li>{@link TransportStrategy#propertyNameTimeout()}</li>\n     <li>{@link TransportStrategy#propertyNameWriteTimeout()}</li>\n </ul>\n\n @param sessionTimeout Duration to use for session timeout.\n"},{"name":"withEmailAddressCriteria","paramTypes":["java.util.EnumSet"],"doc":" Sets the email address validation restrictions when validating and sending emails using the current <code>Mailer</code> instance.\n <p>\n Defaults to {@link EmailAddressCriteria#RFC_COMPLIANT} if not overridden with a ({@code null}) value.\n\n @see EmailAddressCriteria\n @see #clearEmailAddressCriteria()\n @see #resetEmailAddressCriteria()\n"},{"name":"withExecutorService","paramTypes":["java.util.concurrent.ExecutorService"],"doc":" <strong>For advanced use cases.</strong>\n <p>\n Allows you to fully customize and manage the thread pool, threads and concurrency characteristics when\n sending in batch mode.\n <p>\n Without calling this, by default the {@code NonJvmBlockingThreadPoolExecutor} is used:\n <ul>\n     <li>with max threads fixed to the given pool size (default is {@value #DEFAULT_POOL_SIZE})</li>\n     <li>with keepAliveTime as specified (if greater than zero, core threads will also time out and die off), default is {@value #DEFAULT_POOL_KEEP_ALIVE_TIME}</li>\n     <li>A {@link LinkedBlockingQueue}</li>\n     <li>The {@code NamedThreadFactory}, which creates named non-daemon threads</li>\n </ul>\n <p>\n <strong>Note:</strong> What makes it NonJvm is that the default keepAliveTime is set to the lowest non-zero value (so 1), so that\n any threads will die off as soon as possible, as not to block the JVM from shutting down.\n <p>\n <strong>Note:</strong> Simple Java Mail will <strong>not</strong> shut down the provided executor service, even if the connection pool is being shut down.\n <em>This will block the JVM from shutting down</em>. The user is responsible for managing the provided executor's life cycle.\n <p>\n <strong>Note:</strong> this only works in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @param executorService A custom executor service (ThreadPoolExecutor), replacing the {@code NonJvmBlockingThreadPoolExecutor}.\n"},{"name":"withThreadPoolSize","paramTypes":["java.lang.Integer"],"doc":" Sets max thread pool size to the given size (default is {@value #DEFAULT_POOL_SIZE}).\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @param threadPoolSize See main description.\n\n @see #resetThreadPoolSize()\n @see #withThreadPoolSize(Integer)\n"},{"name":"withThreadPoolKeepAliveTime","paramTypes":["java.lang.Integer"],"doc":" When set to a non-zero value (milliseconds), this keepAlivetime is applied to <em>both</em> core and extra threads. This is so that\n these threads can never block the JVM from exiting once they finish their task. This is different from daemon threads,\n which are abandonded without waiting for them to finish the tasks.\n <p>\n When set to zero, this keepAliveTime is applied only to extra threads, not core threads. This is the classic executor\n behavior, but this blocks the JVM from exiting.\n <p>\n Defaults to {@value #DEFAULT_POOL_KEEP_ALIVE_TIME}ms.\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @param threadPoolKeepAliveTime Value in milliseconds. See main description for details.\n\n @see #resetThreadPoolKeepAliveTime()\n"},{"name":"withClusterKey","paramTypes":["java.util.UUID"],"doc":" By defining a clusterKey, you can form clusters where other {@link Mailer} instances represent\n individual connection pools within the same cluster. Having multiple mailers using the same clusterKey\n means those mailes form a cluster where mail-send action are rotated over connection pools stemming from these\n mailer instances (this has implications for mailers defining connections differently from eachother, see documentation).\n <p>\n By default a cluster key is uniquely generated, so for a single new mailer a new cluster is always generated,\n thus effectively nothing is clustered.\n\n @see <a href=\"http://www.simplejavamail.org/configuration.html#section-batch-and-clustering\">Clustering with Simple Java Mail</a>\n\n @param clusterKey See main description.\n"},{"name":"withConnectionPoolCoreSize","paramTypes":["java.lang.Integer"],"doc":" Configures the connection pool's core size (default {@value DEFAULT_CONNECTIONPOOL_CORE_SIZE}), which means the SMTP connection pool will keep X connections open at all times until shut down.\n Note that this also means that if you configure an auto-expiry timeout, these connections die off and new ones are created immediately to maintain core size.\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @param connectionPoolCoreSize See main description.\n"},{"name":"withConnectionPoolMaxSize","paramTypes":["java.lang.Integer"],"doc":" Configured the connection pool's max size (default {@value DEFAULT_CONNECTIONPOOL_MAX_SIZE}) in case of high thread contention. Note that this determines how many connections can be open at\n any one time to a single server. Make sure your server can handle the load coming from all connections. There's no point having hundred concurrent connections if it degrades your\n server's performance because of CPU throttling and network congestion.\n <p>\n In addition, if your server makes connections wait, it means threads will be waiting on the {@link javax.mail.Transport} instance to start their work load, instead of threads being blocked\n on a <em>claim</em> for an available {@code Transport} instance. In other words: by having an oversized connection pool, you inadvertently bypass the blocking claim mechanism of the\n connection pool and wait on the Transport directly instead.\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @param connectionPoolMaxSize See main description.\n"},{"name":"withConnectionPoolClaimTimeoutMillis","paramTypes":["java.lang.Integer"],"doc":" If {@code >0}, configures the connection pool to wait for a limited time after which the attempt to claim a Transport connection errors out.\n The default is to wait indefinately until a connection becomes available in the pool.\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @param connectionPoolClaimTimeoutMillis See main description.\n"},{"name":"withConnectionPoolExpireAfterMillis","paramTypes":["java.lang.Integer"],"doc":" If {@code >0}, configures the connection pool to automatically close connections after some milliseconds (default {@value DEFAULT_CONNECTIONPOOL_EXPIREAFTER_MILLIS}) since last usage.\n <p>\n Note that if you combine this with {@link #withConnectionPoolCoreSize(Integer)} also {@code >0} (default is {@value DEFAULT_CONNECTIONPOOL_CORE_SIZE}), connections will keep\n closing and openings to keep core pool populated until shut down.\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @param connectionPoolExpireAfterMillis See main description.\n"},{"name":"withConnectionPoolLoadBalancingStrategy","paramTypes":["org.simplejavamail.api.mailer.config.LoadBalancingStrategy"],"doc":" Defines the various types of load balancing modes supported by the connection pool ion the <a href=\"http://http://www.simplejavamail.org/configuration.html#section-batch-and-clustering\">batch-module</a>.\n <p>\n This is only relevant if you have multiple mail servers in one or more clusters. Currently it is impossible to define different load balancing strategies for different clusters.\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @param loadBalancingStrategy See main description.\n"},{"name":"withTransportModeLoggingOnly","paramTypes":["java.lang.Boolean"],"doc":" Determines whether at the very last moment an email is sent out using JavaMail's native API or whether the email is simply only logged.\n\n @param transportModeLoggingOnly Flag {@code true} or {@code false} that enables or disables logging only mode when sending emails.\n\n @see #resetTransportModeLoggingOnly()\n"},{"name":"trustingSSLHosts","paramTypes":["java.lang.String[]"],"doc":" Configures the new session to only accept server certificates issued to one of the provided hostnames. Note that verifying server identity\n can be turned on and off with {@link #verifyingServerIdentity(boolean)}.\n <p>\n Passing an empty list resets the current session's trust behavior to the default, and is equivalent to never calling this method in the first\n place.\n <p>\n <strong>Security warning:</strong> Any certificate matching any of the provided host names will be accepted, regardless of the certificate\n issuer; attackers can abuse this behavior by serving a matching self-signed certificate during a man-in-the-middle attack.\n <p>\n This method sets the property {@code mail.smtp.ssl.trust} to a space-separated list of the provided {@code hosts}. If the provided list is\n empty, {@code mail.smtp.ssl.trust} is unset.\n\n @see <a href=\"https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html#mail.smtp.ssl.trust\"><code>mail.smtp.ssl.trust</code></a>\n @see #trustingAllHosts(boolean)\n @see <a href=\"https://www.oracle.com/technetwork/java/sslnotes-150073.txt\">Notes for use of SSL with JavaMail</a>\n\n @param sslHostsToTrust See main description.\n"},{"name":"trustingAllHosts","paramTypes":["boolean"],"doc":" Configures the current session to trust all hosts. Defaults to true, but this allows you to white list <em>only</em> certain hosts.\n <p>\n Note that this is <em>not</em> the same as server identity verification, which is enabled through {@link #verifyingServerIdentity(boolean)}.\n It would be prudent to have at least one of these features turned on, lest you be vulnerable to man-in-the-middle attacks.\n\n @see <a href=\"https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html#mail.smtp.ssl.trust\">mail.smtp.ssl.trust</a>\n @see #trustingSSLHosts(String...)\n @see <a href=\"https://www.oracle.com/technetwork/java/sslnotes-150073.txt\">Notes for use of SSL with JavaMail</a>\n\n @param trustAllHosts See main description.\n"},{"name":"verifyingServerIdentity","paramTypes":["boolean"],"doc":" Configures the current session to not verify the server's identity on an SSL connection. Defaults to true.\n <p>\n Note that this is <em>not</em> the same as {@link #trustingAllHosts(boolean)} or {@link #trustingSSLHosts(String...)}.<br>\n It would be prudent to have at least one of these features turned on, lest you be vulnerable to man-in-the-middle attacks.\n\n @see <a href=\"https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html#mail.smtp.ssl.checkserveridentity\">mail.smtp.ssl.checkserveridentity</a>\n @see #trustingAllHosts(boolean)\n @see #trustingSSLHosts(String...)\n @see <a href=\"https://www.oracle.com/technetwork/java/sslnotes-150073.txt\">Notes for use of SSL with JavaMail</a>\n\n @param verifyingServerIdentity See main description.\n"},{"name":"withProperties","paramTypes":["java.util.Properties"],"doc":" Adds the given properties to the total list applied to the {@link Session} when building a mailer.\n\n @see #withProperties(Map)\n @see #withProperty(String, Object)\n @see #clearProperties()\n"},{"name":"withProperties","paramTypes":["java.util.Map"],"doc":" @see #withProperties(Properties)\n @see #clearProperties()\n"},{"name":"withProperty","paramTypes":["java.lang.String","java.lang.Object"],"doc":" Sets property or removes it if the provided value is <code>null</code>. If provided, the value is always converted <code>toString()</code>.\n\n @param propertyName  The name of the property that wil be set on the internal Session object.\n @param propertyValue The text value of the property that wil be set on the internal Session object.\n\n @see #withProperties(Properties)\n @see #clearProperties()\n"},{"name":"withCustomMailer","paramTypes":["org.simplejavamail.api.mailer.CustomMailer"],"doc":" @see CustomMailer\n"},{"name":"resetSessionTimeout","paramTypes":[],"doc":" Resets session time to its default ({@value DEFAULT_SESSION_TIMEOUT_MILLIS}).\n\n @see #withSessionTimeout(Integer)\n"},{"name":"resetEmailAddressCriteria","paramTypes":[],"doc":" Resets emailAddressCriteria to {@link EmailAddressCriteria#RFC_COMPLIANT}.\n\n @see #withEmailAddressCriteria(EnumSet)\n @see #clearEmailAddressCriteria()\n"},{"name":"resetExecutorService","paramTypes":[],"doc":" Resets the executor services to be used back to the default, created by the Batch module if loaded, or else\n {@link Executors#newSingleThreadExecutor()}.\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @see #withExecutorService(ExecutorService)\n @see\n <a href=\"https://javadoc.io/page/org.simplejavamail/simple-java-mail/latest/org/simplejavamail/internal/batchsupport/concurrent/NonJvmBlockingThreadPoolExecutor.html\">Batch module's NonJvmBlockingThreadPoolExecutor</a>\n"},{"name":"resetThreadPoolSize","paramTypes":[],"doc":" Resets max thread pool size to its default of {@value #DEFAULT_POOL_SIZE}.\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @see #withThreadPoolSize(Integer)\n"},{"name":"resetThreadPoolKeepAliveTime","paramTypes":[],"doc":" Resets thread pool keepAliveTime to its default ({@value #DEFAULT_POOL_KEEP_ALIVE_TIME}).\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @see #withThreadPoolKeepAliveTime(Integer)\n"},{"name":"resetTrustingAllHosts","paramTypes":[],"doc":" Reset trusting any host; trust all hosts is set to {@value #DEFAULT_TRUST_ALL_HOSTS}.\n\n @see #trustingAllHosts(boolean)\n @see #trustingSSLHosts(String...)\n @see #verifyingServerIdentity(boolean)\n"},{"name":"resetVerifyingServerIdentity","paramTypes":[],"doc":" Reset verifying the server's identity to {@value #DEFAULT_VERIFY_SERVER_IDENTITY}.\n\n @see #verifyingServerIdentity(boolean)\n @see #trustingSSLHosts(String...)\n @see #trustingAllHosts(boolean)\n"},{"name":"resetClusterKey","paramTypes":[],"doc":" Reset the cluster key to empty, so it will be generated uniquely, avoiding clustering with any other {@link Mailer}.\n\n @see #withClusterKey(UUID)\n"},{"name":"resetConnectionPoolCoreSize","paramTypes":[],"doc":" Resets connection pool core size to its default ({@value #DEFAULT_CONNECTIONPOOL_CORE_SIZE}).\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @see #withConnectionPoolCoreSize(Integer)\n"},{"name":"resetConnectionPoolMaxSize","paramTypes":[],"doc":" Resets connection pool max size to its default ({@value #DEFAULT_CONNECTIONPOOL_MAX_SIZE}).\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @see #withConnectionPoolMaxSize(Integer)\n"},{"name":"resetConnectionPoolClaimTimeoutMillis","paramTypes":[],"doc":" Resets connection pool connection claim timeout back to indefinately.\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @see #withConnectionPoolClaimTimeoutMillis(Integer)\n"},{"name":"resetConnectionPoolExpireAfterMillis","paramTypes":[],"doc":" Resets connection pool expire-after-milliseconds property to its default ({@value #DEFAULT_CONNECTIONPOOL_EXPIREAFTER_MILLIS}).\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @see #withConnectionPoolExpireAfterMillis(Integer)\n"},{"name":"resetConnectionPoolLoadBalancingStrategy","paramTypes":[],"doc":" Resets connection pool load balancing strategy to its default ({@value #DEFAULT_CONNECTIONPOOL_LOADBALANCING_STRATEGY}).\n <p>\n <strong>Note:</strong> this is only used in combination with the {@value org.simplejavamail.internal.modules.BatchModule#NAME}.\n\n @see #withConnectionPoolLoadBalancingStrategy(LoadBalancingStrategy)\n"},{"name":"resetTransportModeLoggingOnly","paramTypes":[],"doc":" Resets transportModeLoggingOnly to {@value #DEFAULT_TRANSPORT_MODE_LOGGING_ONLY}.\n\n @see #withTransportModeLoggingOnly(Boolean)\n"},{"name":"clearProxy","paramTypes":[],"doc":" Empties all proxy configuration.\n"},{"name":"clearEmailAddressCriteria","paramTypes":[],"doc":" Removes all email address criteria, meaning validation won't take place.\n\n @see #withEmailAddressCriteria(EnumSet)\n @see #resetEmailAddressCriteria()\n"},{"name":"clearTrustedSSLHosts","paramTypes":[],"doc":" Removes all trusted hosts from the list.\n\n @see #trustingSSLHosts(String...)\n @see #trustingAllHosts(boolean)\n @see #verifyingServerIdentity(boolean)\n"},{"name":"clearProperties","paramTypes":[],"doc":" Removes all properties.\n\n @see #withProperties(Properties)\n"},{"name":"isAsync","paramTypes":[],"doc":" @see #async()\n"},{"name":"getProxyHost","paramTypes":[],"doc":" @see #withProxyHost(String)\n"},{"name":"getProxyPort","paramTypes":[],"doc":" @see #withProxyPort(Integer)\n"},{"name":"getProxyUsername","paramTypes":[],"doc":" @see #withProxyUsername(String)\n"},{"name":"getProxyPassword","paramTypes":[],"doc":" @see #withProxyPassword(String)\n"},{"name":"getProxyBridgePort","paramTypes":[],"doc":" @see #withProxyBridgePort(Integer)\n"},{"name":"isDebugLogging","paramTypes":[],"doc":" @see #withDebugLogging(Boolean)\n"},{"name":"getSessionTimeout","paramTypes":[],"doc":" @see #withSessionTimeout(Integer)\n"},{"name":"getEmailAddressCriteria","paramTypes":[],"doc":" @see #withEmailAddressCriteria(EnumSet)\n"},{"name":"getExecutorService","paramTypes":[],"doc":" Returns the user set ExecutorService or else null as the default ExecutorService is not created until the {@link org.simplejavamail.api.mailer.config.OperationalConfig} is created for the\n new {@link Mailer} instance.\n\n @see #withExecutorService(ExecutorService)\n"},{"name":"getThreadPoolSize","paramTypes":[],"doc":" @see #withThreadPoolSize(Integer)\n"},{"name":"getThreadPoolKeepAliveTime","paramTypes":[],"doc":" @see #withThreadPoolKeepAliveTime(Integer)\n"},{"name":"getClusterKey","paramTypes":[],"doc":" @see #withClusterKey(UUID)\n"},{"name":"getConnectionPoolCoreSize","paramTypes":[],"doc":" @see #withConnectionPoolCoreSize(Integer)\n"},{"name":"getConnectionPoolMaxSize","paramTypes":[],"doc":" @see #withConnectionPoolMaxSize(Integer)\n"},{"name":"getConnectionPoolClaimTimeoutMillis","paramTypes":[],"doc":" @see #withConnectionPoolClaimTimeoutMillis(Integer)\n"},{"name":"getConnectionPoolExpireAfterMillis","paramTypes":[],"doc":" @see #withConnectionPoolExpireAfterMillis(Integer)\n"},{"name":"getConnectionPoolLoadBalancingStrategy","paramTypes":[],"doc":" @see #withConnectionPoolLoadBalancingStrategy(LoadBalancingStrategy)\n"},{"name":"getSslHostsToTrust","paramTypes":[],"doc":" @see #trustingSSLHosts(String...)\n"},{"name":"isTrustAllSSLHost","paramTypes":[],"doc":" @see #trustingAllHosts(boolean)\n"},{"name":"isVerifyingServerIdentity","paramTypes":[],"doc":" @see #verifyingServerIdentity(boolean)\n"},{"name":"isTransportModeLoggingOnly","paramTypes":[],"doc":" @see #withTransportModeLoggingOnly(Boolean)\n"},{"name":"getProperties","paramTypes":[],"doc":" @see #withProperties(Properties)\n"},{"name":"getCustomMailer","paramTypes":[],"doc":" @see #withCustomMailer(CustomMailer)\n"}]}